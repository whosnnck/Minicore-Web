{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\nicko\\\\OneDrive\\\\Desktop\\\\MINICORE\\\\frontend\\\\cliente\\\\src\\\\components\\\\TablaAlumno.jsx\",\n  _s = $RefreshSig$();\n// AlumnoTable.js\nimport React, { useState, useEffect } from 'react';\nimport axios from '../services/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AlumnoTable = () => {\n  _s();\n  const [alumnos, setAlumnos] = useState([]);\n  const [selectedIdBanner, setSelectedIdBanner] = useState('');\n  const [notas, setNotas] = useState([]);\n  const [selectedAlumno, setSelectedAlumno] = useState('');\n  useEffect(() => {\n    const fetchAlumnos = async () => {\n      try {\n        const response = await axios.get('/alumno/allAlumnos');\n        setAlumnos(response.data.alumnos);\n      } catch (error) {\n        console.error('Error al obtener alumnos:', error);\n      }\n    };\n    fetchAlumnos();\n  }, []);\n  const handleAlumnoSelect = async idBanner => {\n    try {\n      const response = await axios.get(`/nota/notas/${idBanner}`);\n      const alumnoData = response.data;\n\n      // Verificar si la respuesta contiene la propiedad 'informacionNotas' y es un array\n      if (alumnoData.informacionNotas && Array.isArray(alumnoData.informacionNotas)) {\n        setNotas(alumnoData.informacionNotas);\n      } else {\n        console.error('La respuesta del servidor no contiene la propiedad informacionNotas o no es un array:', response.data);\n        setNotas([]); // Asignar un array vacío en caso de que la respuesta no sea válida\n      }\n      setSelectedIdBanner(idBanner);\n    } catch (error) {\n      console.error('Error al obtener notas del alumno:', error);\n      setNotas([]); // En caso de error, asignar un array vacío\n    }\n  };\n  const handleDropdownChange = event => {\n    const idBanner = event.target.value;\n    setSelectedAlumno(idBanner);\n    handleAlumnoSelect(idBanner);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Tabla de Alumnos y Notas\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"alumnoDropdown\",\n      children: \"Selecciona un alumno:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      id: \"alumnoDropdown\",\n      value: selectedAlumno,\n      onChange: handleDropdownChange,\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"\",\n        children: \"Selecciona un alumno\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), alumnos.map(alumno => /*#__PURE__*/_jsxDEV(\"option\", {\n        value: alumno.idBanner,\n        children: [alumno.nombre, \" - \", alumno.idBanner]\n      }, alumno.idBanner, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"ID Banner\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Nombre\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Notas\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: alumnos.map(alumno => /*#__PURE__*/_jsxDEV(\"tr\", {\n          onClick: () => handleAlumnoSelect(alumno.idBanner),\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: alumno.idBanner\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: alumno.nombre\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(\"ul\", {\n              children: selectedIdBanner === alumno.idBanner && notas.map(nota => /*#__PURE__*/_jsxDEV(\"li\", {\n                children: [\"Progreso \", nota.progreso, \": \", nota.nota]\n              }, nota._id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 81,\n                columnNumber: 23\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 15\n          }, this)]\n        }, alumno.idBanner, true, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n};\n_s(AlumnoTable, \"uMvYAkHOCJs0c1o4RRO/GFLk/6M=\");\n_c = AlumnoTable;\nexport default AlumnoTable;\nvar _c;\n$RefreshReg$(_c, \"AlumnoTable\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","AlumnoTable","_s","alumnos","setAlumnos","selectedIdBanner","setSelectedIdBanner","notas","setNotas","selectedAlumno","setSelectedAlumno","fetchAlumnos","response","get","data","error","console","handleAlumnoSelect","idBanner","alumnoData","informacionNotas","Array","isArray","handleDropdownChange","event","target","value","children","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","id","onChange","map","alumno","nombre","onClick","nota","progreso","_id","_c","$RefreshReg$"],"sources":["C:/Users/nicko/OneDrive/Desktop/MINICORE/frontend/cliente/src/components/TablaAlumno.jsx"],"sourcesContent":["// AlumnoTable.js\r\nimport React, { useState, useEffect } from 'react';\r\nimport axios from '../services/api';\r\n\r\nconst AlumnoTable = () => {\r\n  const [alumnos, setAlumnos] = useState([]);\r\n  const [selectedIdBanner, setSelectedIdBanner] = useState('');\r\n  const [notas, setNotas] = useState([]);\r\n  const [selectedAlumno, setSelectedAlumno] = useState('');\r\n\r\n  useEffect(() => {\r\n    const fetchAlumnos = async () => {\r\n      try {\r\n        const response = await axios.get('/alumno/allAlumnos');\r\n        setAlumnos(response.data.alumnos);\r\n      } catch (error) {\r\n        console.error('Error al obtener alumnos:', error);\r\n      }\r\n    };\r\n\r\n    fetchAlumnos();\r\n  }, []);\r\n\r\n  const handleAlumnoSelect = async (idBanner) => {\r\n    try {\r\n      const response = await axios.get(`/nota/notas/${idBanner}`);\r\n      const alumnoData = response.data;\r\n  \r\n      // Verificar si la respuesta contiene la propiedad 'informacionNotas' y es un array\r\n      if (alumnoData.informacionNotas && Array.isArray(alumnoData.informacionNotas)) {\r\n        setNotas(alumnoData.informacionNotas);\r\n      } else {\r\n        console.error('La respuesta del servidor no contiene la propiedad informacionNotas o no es un array:', response.data);\r\n        setNotas([]); // Asignar un array vacío en caso de que la respuesta no sea válida\r\n      }\r\n  \r\n      setSelectedIdBanner(idBanner);\r\n    } catch (error) {\r\n      console.error('Error al obtener notas del alumno:', error);\r\n      setNotas([]); // En caso de error, asignar un array vacío\r\n    }\r\n  };\r\n  \r\n\r\n  const handleDropdownChange = (event) => {\r\n    const idBanner = event.target.value;\r\n    setSelectedAlumno(idBanner);\r\n    handleAlumnoSelect(idBanner);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Tabla de Alumnos y Notas</h2>\r\n      <label htmlFor=\"alumnoDropdown\">Selecciona un alumno:</label>\r\n      <select id=\"alumnoDropdown\" value={selectedAlumno} onChange={handleDropdownChange}>\r\n        <option value=\"\">Selecciona un alumno</option>\r\n        {alumnos.map((alumno) => (\r\n          <option key={alumno.idBanner} value={alumno.idBanner}>\r\n            {alumno.nombre} - {alumno.idBanner}\r\n          </option>\r\n        ))}\r\n      </select>\r\n\r\n      <table>\r\n        <thead>\r\n          <tr>\r\n            <th>ID Banner</th>\r\n            <th>Nombre</th>\r\n            <th>Notas</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {alumnos.map((alumno) => (\r\n            <tr key={alumno.idBanner} onClick={() => handleAlumnoSelect(alumno.idBanner)}>\r\n              <td>{alumno.idBanner}</td>\r\n              <td>{alumno.nombre}</td>\r\n              <td>\r\n                <ul>\r\n                  {selectedIdBanner === alumno.idBanner &&\r\n                    notas.map((nota) => (\r\n                      <li key={nota._id}>\r\n                        Progreso {nota.progreso}: {nota.nota}\r\n                      </li>\r\n                    ))}\r\n                </ul>\r\n              </td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AlumnoTable;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}