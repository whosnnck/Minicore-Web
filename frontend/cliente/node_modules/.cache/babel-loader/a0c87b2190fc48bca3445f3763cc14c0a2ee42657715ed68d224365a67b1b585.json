{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\nicko\\\\OneDrive\\\\Desktop\\\\MINICORE\\\\frontend\\\\cliente\\\\src\\\\components\\\\TablaAlumno.jsx\",\n  _s = $RefreshSig$();\n// AlumnoTable.js\nimport React, { useState, useEffect } from 'react';\nimport axios from '../services/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AlumnoTable = () => {\n  _s();\n  const [alumnos, setAlumnos] = useState([]);\n  const [selectedIdBanner, setSelectedIdBanner] = useState('');\n  const [notas, setNotas] = useState([]);\n  const [selectedAlumno, setSelectedAlumno] = useState('');\n  useEffect(() => {\n    const fetchAlumnos = async () => {\n      try {\n        const response = await axios.get('/alumno/allAlumnos');\n        setAlumnos(response.data.alumnos);\n      } catch (error) {\n        console.error('Error al obtener alumnos:', error);\n      }\n    };\n    fetchAlumnos();\n  }, []);\n  const handleAlumnoSelect = async idBanner => {\n    try {\n      const response = await axios.get(`/nota/notas/${idBanner}`);\n      const notasDelAlumno = response.data; // asumiendo que la respuesta contiene la lista de notas del alumno\n\n      // Verificar si la respuesta es un array antes de asignarlo a 'notas'\n      if (Array.isArray(notasDelAlumno)) {\n        setNotas(notasDelAlumno);\n      } else {\n        console.error('La respuesta del servidor no es un array:', response.data);\n        setNotas([]); // Asignar un array vacío en caso de que la respuesta no sea un array\n      }\n      setSelectedIdBanner(idBanner);\n    } catch (error) {\n      console.error('Error al obtener notas del alumno:', error);\n    }\n  };\n  const handleDropdownChange = event => {\n    const idBanner = event.target.value;\n    setSelectedAlumno(idBanner);\n    handleAlumnoSelect(idBanner);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Tabla de Alumnos y Notas\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"alumnoDropdown\",\n      children: \"Selecciona un alumno:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      id: \"alumnoDropdown\",\n      value: selectedAlumno,\n      onChange: handleDropdownChange,\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"\",\n        children: \"Selecciona un alumno\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), alumnos.map(alumno => /*#__PURE__*/_jsxDEV(\"option\", {\n        value: alumno.idBanner,\n        children: [alumno.nombre, \" - \", alumno.idBanner]\n      }, alumno.idBanner, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"ID Banner\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Nombre\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Notas\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: alumnos.map(alumno => /*#__PURE__*/_jsxDEV(\"tr\", {\n          onClick: () => handleAlumnoSelect(alumno.idBanner),\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: alumno.idBanner\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: alumno.nombre\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(\"ul\", {\n              children: selectedIdBanner === alumno.idBanner && notas.map(nota => /*#__PURE__*/_jsxDEV(\"li\", {\n                children: [\"Progreso \", nota.progreso, \": \", nota.nota]\n              }, nota._id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 79,\n                columnNumber: 23\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 15\n          }, this)]\n        }, alumno.idBanner, true, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n};\n_s(AlumnoTable, \"uMvYAkHOCJs0c1o4RRO/GFLk/6M=\");\n_c = AlumnoTable;\nexport default AlumnoTable;\nvar _c;\n$RefreshReg$(_c, \"AlumnoTable\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","AlumnoTable","_s","alumnos","setAlumnos","selectedIdBanner","setSelectedIdBanner","notas","setNotas","selectedAlumno","setSelectedAlumno","fetchAlumnos","response","get","data","error","console","handleAlumnoSelect","idBanner","notasDelAlumno","Array","isArray","handleDropdownChange","event","target","value","children","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","id","onChange","map","alumno","nombre","onClick","nota","progreso","_id","_c","$RefreshReg$"],"sources":["C:/Users/nicko/OneDrive/Desktop/MINICORE/frontend/cliente/src/components/TablaAlumno.jsx"],"sourcesContent":["// AlumnoTable.js\r\nimport React, { useState, useEffect } from 'react';\r\nimport axios from '../services/api';\r\n\r\nconst AlumnoTable = () => {\r\n  const [alumnos, setAlumnos] = useState([]);\r\n  const [selectedIdBanner, setSelectedIdBanner] = useState('');\r\n  const [notas, setNotas] = useState([]);\r\n  const [selectedAlumno, setSelectedAlumno] = useState('');\r\n\r\n  useEffect(() => {\r\n    const fetchAlumnos = async () => {\r\n      try {\r\n        const response = await axios.get('/alumno/allAlumnos');\r\n        setAlumnos(response.data.alumnos);\r\n      } catch (error) {\r\n        console.error('Error al obtener alumnos:', error);\r\n      }\r\n    };\r\n\r\n    fetchAlumnos();\r\n  }, []);\r\n\r\n  const handleAlumnoSelect = async (idBanner) => {\r\n    try {\r\n      const response = await axios.get(`/nota/notas/${idBanner}`);\r\n      const notasDelAlumno = response.data; // asumiendo que la respuesta contiene la lista de notas del alumno\r\n\r\n      // Verificar si la respuesta es un array antes de asignarlo a 'notas'\r\n      if (Array.isArray(notasDelAlumno)) {\r\n        setNotas(notasDelAlumno);\r\n      } else {\r\n        console.error('La respuesta del servidor no es un array:', response.data);\r\n        setNotas([]); // Asignar un array vacío en caso de que la respuesta no sea un array\r\n      }\r\n\r\n      setSelectedIdBanner(idBanner);\r\n    } catch (error) {\r\n      console.error('Error al obtener notas del alumno:', error);\r\n    }\r\n  };\r\n\r\n  const handleDropdownChange = (event) => {\r\n    const idBanner = event.target.value;\r\n    setSelectedAlumno(idBanner);\r\n    handleAlumnoSelect(idBanner);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Tabla de Alumnos y Notas</h2>\r\n      <label htmlFor=\"alumnoDropdown\">Selecciona un alumno:</label>\r\n      <select id=\"alumnoDropdown\" value={selectedAlumno} onChange={handleDropdownChange}>\r\n        <option value=\"\">Selecciona un alumno</option>\r\n        {alumnos.map((alumno) => (\r\n          <option key={alumno.idBanner} value={alumno.idBanner}>\r\n            {alumno.nombre} - {alumno.idBanner}\r\n          </option>\r\n        ))}\r\n      </select>\r\n\r\n      <table>\r\n        <thead>\r\n          <tr>\r\n            <th>ID Banner</th>\r\n            <th>Nombre</th>\r\n            <th>Notas</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {alumnos.map((alumno) => (\r\n            <tr key={alumno.idBanner} onClick={() => handleAlumnoSelect(alumno.idBanner)}>\r\n              <td>{alumno.idBanner}</td>\r\n              <td>{alumno.nombre}</td>\r\n              <td>\r\n                <ul>\r\n                  {selectedIdBanner === alumno.idBanner &&\r\n                    notas.map((nota) => (\r\n                      <li key={nota._id}>\r\n                        Progreso {nota.progreso}: {nota.nota}\r\n                      </li>\r\n                    ))}\r\n                </ul>\r\n              </td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AlumnoTable;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}