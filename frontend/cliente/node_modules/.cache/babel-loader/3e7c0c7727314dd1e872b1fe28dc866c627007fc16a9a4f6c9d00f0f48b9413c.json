{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\nicko\\\\OneDrive\\\\Desktop\\\\MINICORE\\\\frontend\\\\cliente\\\\src\\\\components\\\\Alumnos.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport alumnostyle from '../styles/alumno.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AlumnoForm = ({\n  onAlumnoSubmit\n}) => {\n  _s();\n  const [nombre, setNombre] = useState('');\n  const [idBanner, setIdBanner] = useState('');\n  const [successMessage, setSuccessMessage] = useState('');\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const response = await fetch('http://localhost:5000/api/alumno/crear', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        nombre,\n        idBanner\n      })\n    });\n    const data = await response.json();\n    if (response.ok) {\n      setNombre('');\n      setIdBanner('');\n      setSuccessMessage('Alumno ingresado correctamente');\n\n      // Ocultar el mensaje después de 2 segundos\n      setTimeout(() => {\n        setSuccessMessage('');\n      }, 2000);\n    } else {\n      console.error(data.error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Nombre:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: nombre,\n          onChange: e => setNombre(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"ID Banner:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: idBanner,\n          onChange: e => setIdBanner(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Agregar Alumno\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), successMessage && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: alumnostyle.successMessage,\n      children: successMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 26\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n};\n_s(AlumnoForm, \"4ne3wMjWiZfiacIN1+szQ3Cwjyk=\");\n_c = AlumnoForm;\nexport default AlumnoForm;\nvar _c;\n$RefreshReg$(_c, \"AlumnoForm\");","map":{"version":3,"names":["React","useState","alumnostyle","jsxDEV","_jsxDEV","AlumnoForm","onAlumnoSubmit","_s","nombre","setNombre","idBanner","setIdBanner","successMessage","setSuccessMessage","handleSubmit","e","preventDefault","response","fetch","method","headers","body","JSON","stringify","data","json","ok","setTimeout","console","error","children","onSubmit","type","value","onChange","target","fileName","_jsxFileName","lineNumber","columnNumber","className","_c","$RefreshReg$"],"sources":["C:/Users/nicko/OneDrive/Desktop/MINICORE/frontend/cliente/src/components/Alumnos.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport alumnostyle from '../styles/alumno.css';\r\n\r\nconst AlumnoForm = ({ onAlumnoSubmit }) => {\r\n  const [nombre, setNombre] = useState('');\r\n  const [idBanner, setIdBanner] = useState('');\r\n  const [successMessage, setSuccessMessage] = useState('');\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    const response = await fetch('http://localhost:5000/api/alumno/crear', {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify({ nombre, idBanner }),\r\n    });\r\n\r\n    const data = await response.json();\r\n\r\n    if (response.ok) {\r\n      setNombre('');\r\n      setIdBanner('');\r\n      setSuccessMessage('Alumno ingresado correctamente');\r\n\r\n      // Ocultar el mensaje después de 2 segundos\r\n      setTimeout(() => {\r\n        setSuccessMessage('');\r\n      }, 2000);\r\n    } else {\r\n      console.error(data.error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <form onSubmit={handleSubmit}>\r\n        <label>\r\n          Nombre:\r\n          <input type=\"text\" value={nombre} onChange={(e) => setNombre(e.target.value)} />\r\n        </label>\r\n        <br />\r\n        <label>\r\n          ID Banner:\r\n          <input type=\"text\" value={idBanner} onChange={(e) => setIdBanner(e.target.value)} />\r\n        </label>\r\n        <br />\r\n        <button type=\"submit\">Agregar Alumno</button>\r\n      </form>\r\n      {successMessage && <p className={alumnostyle.successMessage}>{successMessage}</p>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AlumnoForm;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}