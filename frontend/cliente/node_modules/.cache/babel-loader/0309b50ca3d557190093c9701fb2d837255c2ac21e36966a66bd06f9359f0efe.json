{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\nicko\\\\OneDrive\\\\Desktop\\\\MINICORE\\\\frontend\\\\cliente\\\\src\\\\components\\\\TablaAlumno.jsx\",\n  _s = $RefreshSig$();\n// AlumnoTable.js\nimport React, { useState, useEffect } from 'react';\nimport axios from '../services/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AlumnoTable = () => {\n  _s();\n  var _alumnos$find;\n  const [alumnos, setAlumnos] = useState([]);\n  const [selectedIdBanner, setSelectedIdBanner] = useState('');\n  const [notas, setNotas] = useState([]);\n  const [notasFinales, setNotasFinales] = useState(null); // Nuevo estado para almacenar las notas finales\n\n  useEffect(() => {\n    const fetchAlumnos = async () => {\n      try {\n        const response = await axios.get('/alumno/allAlumnos');\n        setAlumnos(response.data.alumnos);\n      } catch (error) {\n        console.error('Error al obtener alumnos:', error);\n      }\n    };\n    fetchAlumnos();\n  }, []);\n  const handleAlumnoSelect = async idBanner => {\n    try {\n      const responseNotas = await axios.get(`/nota/notas/${idBanner}`);\n      const responseNotasFinales = await axios.get(`/nota/obtenernotas/${idBanner}`);\n      const notasDelAlumno = responseNotas.data.informacionNotas; // ajusta la propiedad según la estructura real de la respuesta\n      const notasFinalesDelAlumno = responseNotasFinales.data;\n      setNotas(notasDelAlumno);\n      setNotasFinales(notasFinalesDelAlumno); // Almacena las notas finales en el estado\n      setSelectedIdBanner(idBanner);\n    } catch (error) {\n      console.error('Error al obtener notas del alumno:', error);\n      setNotas([]); // En caso de error, asignar un array vacío\n      setNotasFinales(null);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Notas del Estudiante\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"alumnoDropdown\",\n      children: \"Selecciona un alumno:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      id: \"alumnoDropdown\",\n      value: selectedIdBanner,\n      onChange: e => handleAlumnoSelect(e.target.value),\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"\",\n        children: \"Selecciona un alumno\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), alumnos.map(alumno => /*#__PURE__*/_jsxDEV(\"option\", {\n        value: alumno.idBanner,\n        children: [alumno.nombre, \" - \", alumno.idBanner]\n      }, alumno.idBanner, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), selectedIdBanner && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"Notas de \", (_alumnos$find = alumnos.find(alumno => alumno.idBanner === selectedIdBanner)) === null || _alumnos$find === void 0 ? void 0 : _alumnos$find.nombre]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 11\n      }, this), notasFinales && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Notas Finales\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Nota Final P1: \", parseFloat(notasFinales.notaFinalP1 / 0.25).toFixed(2)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Nota Final P2: \", parseFloat(notasFinales.notaFinalP2 / 0.35).toFixed(2)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Nota Necesitada: \", notasFinales.notaNecesitada]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n};\n_s(AlumnoTable, \"3rIai6ETIv2GfV5WAWS9KE7Dh2Q=\");\n_c = AlumnoTable;\nexport default AlumnoTable;\nvar _c;\n$RefreshReg$(_c, \"AlumnoTable\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","AlumnoTable","_s","_alumnos$find","alumnos","setAlumnos","selectedIdBanner","setSelectedIdBanner","notas","setNotas","notasFinales","setNotasFinales","fetchAlumnos","response","get","data","error","console","handleAlumnoSelect","idBanner","responseNotas","responseNotasFinales","notasDelAlumno","informacionNotas","notasFinalesDelAlumno","children","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","id","value","onChange","e","target","map","alumno","nombre","find","parseFloat","notaFinalP1","toFixed","notaFinalP2","notaNecesitada","_c","$RefreshReg$"],"sources":["C:/Users/nicko/OneDrive/Desktop/MINICORE/frontend/cliente/src/components/TablaAlumno.jsx"],"sourcesContent":["// AlumnoTable.js\r\nimport React, { useState, useEffect } from 'react';\r\nimport axios from '../services/api';\r\n\r\nconst AlumnoTable = () => {\r\n  const [alumnos, setAlumnos] = useState([]);\r\n  const [selectedIdBanner, setSelectedIdBanner] = useState('');\r\n  const [notas, setNotas] = useState([]);\r\n  const [notasFinales, setNotasFinales] = useState(null); // Nuevo estado para almacenar las notas finales\r\n\r\n  useEffect(() => {\r\n    const fetchAlumnos = async () => {\r\n      try {\r\n        const response = await axios.get('/alumno/allAlumnos');\r\n        setAlumnos(response.data.alumnos);\r\n      } catch (error) {\r\n        console.error('Error al obtener alumnos:', error);\r\n      }\r\n    };\r\n\r\n    fetchAlumnos();\r\n  }, []);\r\n\r\n  const handleAlumnoSelect = async (idBanner) => {\r\n    try {\r\n      const responseNotas = await axios.get(`/nota/notas/${idBanner}`);\r\n      const responseNotasFinales = await axios.get(`/nota/obtenernotas/${idBanner}`);\r\n\r\n      const notasDelAlumno = responseNotas.data.informacionNotas; // ajusta la propiedad según la estructura real de la respuesta\r\n      const notasFinalesDelAlumno = responseNotasFinales.data;\r\n\r\n      setNotas(notasDelAlumno);\r\n      setNotasFinales(notasFinalesDelAlumno); // Almacena las notas finales en el estado\r\n      setSelectedIdBanner(idBanner);\r\n    } catch (error) {\r\n      console.error('Error al obtener notas del alumno:', error);\r\n      setNotas([]); // En caso de error, asignar un array vacío\r\n      setNotasFinales(null);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Notas del Estudiante</h2>\r\n      <label htmlFor=\"alumnoDropdown\">Selecciona un alumno:</label>\r\n      <select\r\n        id=\"alumnoDropdown\"\r\n        value={selectedIdBanner}\r\n        onChange={(e) => handleAlumnoSelect(e.target.value)}\r\n      >\r\n        <option value=\"\">Selecciona un alumno</option>\r\n        {alumnos.map((alumno) => (\r\n          <option key={alumno.idBanner} value={alumno.idBanner}>\r\n            {alumno.nombre} - {alumno.idBanner}\r\n          </option>\r\n        ))}\r\n      </select>\r\n\r\n      {selectedIdBanner && (\r\n        <div>\r\n          <h3>Notas de {alumnos.find((alumno) => alumno.idBanner === selectedIdBanner)?.nombre}</h3>\r\n                    {notasFinales && (\r\n            <div>\r\n              <h3>Notas Finales</h3>\r\n              <p>Nota Final P1: {parseFloat((notasFinales.notaFinalP1)/ 0.25).toFixed(2)}</p>\r\n              <p>Nota Final P2: {parseFloat((notasFinales.notaFinalP2)/0.35).toFixed(2)}</p>\r\n              <p>Nota Necesitada: {notasFinales.notaNecesitada}</p>\r\n            </div>\r\n          )}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AlumnoTable;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}